<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>WaarpProxyR66</artifactId>
  <version>1.0.2</version>
  <name>Waarp Proxy in R66 protocol</name>
  <description>Waarp Proxy in R66 protocol</description>
  <url>http://waarp.github.com/WaarpProxyR66</url>
  <inceptionYear>2009</inceptionYear>
  <parent>
    <groupId>Waarp</groupId>
    <artifactId>persistence-deps</artifactId>
    <version>1.3</version>
  </parent>
  <issueManagement>
	<system>GitHub</system>
  	<url>https://github.com/waarp/WaarpProxyR66/issues/</url>
  </issueManagement>
  <scm>
  	<connection>scm:git:git://github.com/waarp/WaarpProxyR66.git</connection>
  	<developerConnection>scm:git:git@github.com:YourID/WaarpProxyR66.git</developerConnection>
  	<url>https://github.com/waarp/WaarpProxyR66</url>
  </scm>
  <licenses>
  	<license>
  		<name>GPL 3.0</name>
  		<url>LICENSE.txt</url>
  	</license>
  </licenses>
  <repositories>
  	<repository>
  		<id>waarp.releases</id>
  		<name>Waarp releases</name>
  		<url>https://raw.github.com/waarp/WaarpMaven2/master/maven2</url>
  		<releases>
  			<enabled>true</enabled>
  		</releases>
  		<snapshots>
  			<enabled>false</enabled>
  		</snapshots>
  	</repository>
  </repositories>
  <dependencies>
    <dependency>
    	<groupId>commons-daemon</groupId>
    	<artifactId>commons-daemon</artifactId>
    	<version>1.0.15</version>
    	<optional>true</optional>
    </dependency>
    <dependency>
    	<groupId>Waarp</groupId>
    	<artifactId>WaarpR66</artifactId>
    	<version>2.4.15</version>
    </dependency>
    <dependency>
    	<groupId>javasysmon</groupId>
    	<artifactId>javasysmon</artifactId>
    	<version>0.3.3</version>
      <optional>true</optional>
    </dependency>
  </dependencies>
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<attach-distribution>false</attach-distribution>
    <filtermodule>**</filtermodule>
  </properties>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>write-version</id>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
	    	</goals>
            <configuration>
              <tasks>
                <mkdir dir="${project.build.directory}"/>
                <mkdir dir="${project.build.directory}/classes"/>
                <echo message="${project.version}" file="${project.build.directory}/version.txt" />
                <echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package org.waarp.openr66.proxy.utils;${line.separator}/** Provides the version information of Waarp OpenR66. */${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { super(); }${line.separator}}${line.separator}" file="${basedir}/src/main/java/org/waarp/openr66/proxy/utils/Version.java" />
                <echo message="${project.artifactId}" />
                <taskdef resource="net/sf/antcontrib/antlib.xml" />
                <if>
                <equals arg1="${project.artifactId}" arg2="WaarpProxyR66"/>
                <then>
                	<mkdir dir="${project.build.directory}/site"/>
                </then>
                </if>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>add-license</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <taskdef resource="net/sf/antcontrib/antlib.xml" />
                <if>
                  <or>
                    <equals arg2="jar" arg1="${project.packaging}" />
                    <equals arg2="bundle" arg1="${project.packaging}" />
                  </or>
                  <then>
                    <move file="${project.build.directory}/${project.build.finalName}.jar" tofile="${project.build.directory}/${project.build.finalName}.orig.jar" />
                    <zip destfile="${project.build.directory}/${project.build.finalName}.jar">
                      <zipfileset dir="${basedir}" prefix="META-INF/">
                        <include name="LICENSE.*" />
                        <include name="NOTICE.*" />
                        <include name="COPYRIGHT.*" />
                      </zipfileset>
                      <zipfileset dir="${basedir}/license" prefix="META-INF/license/">
                        <exclude name="**/.*/**" />
                        <include name="**" />
                      </zipfileset>
                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}.orig.jar" dirmode="755">
                      </zipfileset>
                    </zip>
                    <delete file="${project.build.directory}/${project.build.finalName}.orig.jar" />
                    <move file="${project.build.directory}/${project.build.finalName}-sources.jar" tofile="${project.build.directory}/${project.build.finalName}-sources.orig.jar" />
                    <zip destfile="${project.build.directory}/${project.build.finalName}-sources.jar">
                      <zipfileset dir="${basedir}" prefix="META-INF/">
                        <include name="LICENSE.*" />
                        <include name="NOTICE.*" />
                        <include name="COPYRIGHT.*" />
                        <include name="**/Makefile" />
                      </zipfileset>
                      <zipfileset dir="${basedir}/license" prefix="META-INF/license/">
                        <exclude name="**/.*/**" />
                        <include name="**" />
                      </zipfileset>
                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}-sources.orig.jar" dirmode="755">
                      	<exclude name="**/${filterexclude}/**" />
                        <include name="**/${filtermodule}/**" />
                      </zipfileset>
                    </zip>
                    <delete file="${project.build.directory}/${project.build.finalName}-sources.orig.jar" />
                  </then>
                </if>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
  	<plugins>
	  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
        <reportSets>
         <reportSet>
          <id>aggregate</id>
          <configuration>
	          <aggregate>true</aggregate>
	          <doclet>org.jboss.apiviz.APIviz</doclet>
	          <docletArtifact>
	            <groupId>org.jboss.apiviz</groupId>
	            <artifactId>apiviz</artifactId>
	            <version>1.3.1.GA</version>
	          </docletArtifact>
	          <attach>false</attach>
	          <useStandardDocletOptions>true</useStandardDocletOptions>
	          <outputDirectory>${project.build.directory}/api</outputDirectory>
	          <reportOutputDirectory>${project.build.directory}/api</reportOutputDirectory>
	          <destDir>api</destDir>
	          <charset>UTF-8</charset>
	          <docencoding>UTF-8</docencoding>
	          <breakiterator>true</breakiterator>
	          <version>true</version>
	          <author>true</author>
	          <keywords>true</keywords>
	          <overview>${basedir}/src/javadoc/overview.html</overview>
	          <doctitle>${project.name} ${project.version} API Reference</doctitle>
	          <windowtitle>${project.name} ${project.version} API Reference</windowtitle>
	          <additionalparam>
	            -link http://java.sun.com/javase/6/docs/api/
	            -link http://static.netty.io/3.5/api/

				-group "Waarp R66 Proxy package" "org.waarp.openr66.proxy*"

	            -sourceclasspath ${basedir}/target/classes
	          </additionalparam>
	          <encoding>UTF-8</encoding>
	          <locale>en_US</locale>
	          <excludePackageNames>${project.groupId}.test*:${project.groupId}.example*:${project.groupId}.util.internal*</excludePackageNames>
          </configuration>
          <reports>
           <report>aggregate</report>
          </reports>
         </reportSet>
        </reportSets>
      </plugin>
	</plugins>
  </reporting>
</project>